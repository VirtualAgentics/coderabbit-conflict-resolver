[project]
name = "pr-conflict-resolver"
version = "0.1.0"
description = "Intelligent conflict resolution for CodeRabbit and GitHub PR comments"
authors = [{ name = "VirtualAgentics", email = "contact@virtualagentics.com" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.12"
keywords = [
  "github",
  "coderabbit",
  "conflict-resolution",
  "pr-automation",
  "code-review",
]

classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Version Control :: Git",
  "Topic :: Software Development :: Quality Assurance",
]

dependencies = [
  "click>=8.0.0",
  "requests>=2.28.0",
  "pydantic>=2.0.0",
  "ruamel.yaml>=0.17.0",
  "tomli>=2.0.0",
  "tomli-w>=1.0.0",
  "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.4.0,<9.0.0",
  "pytest-cov>=4.1.0,<8.0.0", # Tested: 4.1.0, 5.0.0, 6.0.0, 6.3.0, 7.0.0 all work with pytest 7.4.x
  "pytest-asyncio>=0.21.0,<2.0.0",
  "black>=24.10.0,<25.0.0",
  "ruff>=0.14.2,<1.0.0",
  "mypy>=1.18.2,<2.0.0",
  "pre-commit>=3.6.0,<4.0.0",
  "types-requests>=2.31.0,<3.0.0",
  "types-PyYAML>=6.0.0,<7.0.0",
  # types-click not needed: Click 8.0+ includes built-in type annotations
  "bandit[toml]>=1.8.6,<2.0.0",
  "safety>=3.6.2,<4.0.0",
  "pip-audit>=2.9.0,<3.0.0",
  "sphinx>=7.0.0,<8.0.0",
  "sphinx-rtd-theme>=1.3.0,<2.0.0",
  "sphinx-autodoc-typehints>=1.24.0,<2.0.0",
  "myst-parser>=2.0.0,<3.0.0",
]

ml = ["scikit-learn>=1.0.0", "numpy>=1.24.0"]

[project.urls]
Homepage = "https://github.com/VirtualAgentics/coderabbit-conflict-resolver"
Documentation = "https://github.com/VirtualAgentics/coderabbit-conflict-resolver/blob/main/docs/"
Repository = "https://github.com/VirtualAgentics/coderabbit-conflict-resolver"
Issues = "https://github.com/VirtualAgentics/coderabbit-conflict-resolver/issues"

[project.scripts]
pr-resolve = "pr_conflict_resolver.cli.main:cli"

[tool.black]
line-length = 100
target-version = ['py312']

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
  "E",     # pycodestyle errors
  "F",     # pyflakes
  "I",     # isort
  "B",     # flake8-bugbear
  "UP",    # pyupgrade
  "C4",    # flake8-comprehensions
  "PIE",   # flake8-pie
  "SIM",   # flake8-simplify
  "T20",   # flake8-print
  "ASYNC", # flake8-async
  "S",     # flake8-bandit (security)
  "RUF",   # Ruff-specific rules
  "ANN",   # flake8-annotations
  "D",     # pydocstyle
]
ignore = ["D203", "D213"] # Conflicting docstring rules

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "ANN", "D"]
"conftest.py" = ["S101", "ANN", "D"]
"src/pr_conflict_resolver/handlers/*.py" = ["T201"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_any_unimported = true
disallow_any_explicit = false   # Allow explicit Any with justification
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["ruamel.*", "tomli.*", "tomli_w.*", "pytest.*", "rich.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "--strict-markers",
  "--strict-config",
  "--cov=src/pr_conflict_resolver",
  "--cov-report=html",
  "--cov-report=term-missing",
  "--cov-fail-under=50",
]
markers = [
  "slow: marks tests as slow",
  "integration: marks tests as integration tests",
]

[tool.bandit]
exclude_dirs = ["tests/", "docs/"]
skips = ["B101"]                   # Skip assert_used in tests
