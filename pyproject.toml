[project]
name = "pr-conflict-resolver"
version = "0.1.0"
description = "Intelligent conflict resolution for CodeRabbit and GitHub PR comments"
authors = [
    { name = "VirtualAgentics", email = "contact@virtualagentics.com" },
]
readme = "README.md"
requires-python = ">=3.12"
keywords = [
    "github",
    "coderabbit",
    "conflict-resolution",
    "pr-automation",
    "code-review",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Software Development :: Quality Assurance",
]
dependencies = [
    "click==8.3.0",
    "requests==2.32.5",
    "pydantic==2.12.3",
    "ruamel.yaml==0.18.16",
    "tomli-w==1.2.0",
    "rich==14.2.0",
]

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [
    "pytest==7.4.4",
    "pytest-cov==7.0.0",
    "pytest-asyncio==0.23.8",
    "black==24.10.0",
    "ruff==0.14.2",
    "mypy==1.18.2",
    "pre-commit==3.8.0",
    "types-requests==2.32.4.20250913",
    "types-PyYAML==6.0.12.20250915",
    "bandit[toml]==1.8.6",
    "safety==3.6.2",
    "pip-audit==2.9.0",
    "sphinx==7.3.7",
    "sphinx-rtd-theme==1.3.0",
    "sphinx-autodoc-typehints==1.25.3",
    "myst-parser==2.0.0",
]
ml = [
    "scikit-learn>=1.0.0,<2.0.0",
    "numpy>=1.24.0,<2.0.0",
]

[project.urls]
Homepage = "https://github.com/VirtualAgentics/coderabbit-conflict-resolver"
Documentation = "https://github.com/VirtualAgentics/coderabbit-conflict-resolver/blob/main/docs/"
Repository = "https://github.com/VirtualAgentics/coderabbit-conflict-resolver"
Issues = "https://github.com/VirtualAgentics/coderabbit-conflict-resolver/issues"

[project.scripts]
pr-resolve = "pr_conflict_resolver.cli.main:cli"

[tool.black]
line-length = 100
target-version = [
    "py312",
]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
    "B",
    "UP",
    "C4",
    "PIE",
    "SIM",
    "T20",
    "ASYNC",
    "S",
    "RUF",
    "ANN",
    "D",
]
ignore = [
    "D203",
    "D213",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",
    "ANN",
    "D",
]
"conftest.py" = [
    "S101",
    "ANN",
    "D",
]
"src/pr_conflict_resolver/handlers/*.py" = [
    "T201",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_any_unimported = true
disallow_any_explicit = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
# Note: pydantic.mypy plugin disabled due to dependency issues
# To enable: pip install pydantic-plugin, then uncomment below
# plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "ruamel.*",
    "tomli_w.*",
    "pytest.*",
    "rich.*",
    "pydantic.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/pr_conflict_resolver",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",  # Increased from 50% to enforce quality standards
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]

[tool.bandit]
exclude_dirs = [
    "tests/",
    "docs/",
]
skips = [
    "B101",
]
